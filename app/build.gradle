buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {
    maven { url 'http://download.crashlytics.com/maven' }
}

// Manifest version information!
def versionMajor = 0
def versionMinor = 0
def versionPatch = 1
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def notificationLog = true

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
def time = new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))


android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
    }

    signingConfigs {
//        debug {
//            storeFile file("../distribution/debug.keystore")
//        }
        release {
            storeFile file('../distribution/release.jks')
            storePassword 'knowyou'
            keyAlias 'insight'
            keyPassword 'insight'
        }
    }

    defaultConfig {
        applicationId "com.cocosw.framework.sample"
        minSdkVersion 9
        targetSdkVersion 21
        versionCode versionMajor * 100000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-${time}"
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "Boolean", "notificationLog", "${notificationLog}"

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            // 2.3 workaround
            minifyEnabled false
            debuggable true
            //    proguardFile '../proguard.cfg'
        }
        release {
            versionNameSuffix '-release'
            zipAlignEnabled true
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':framework')
    debugCompile project(':debug')
    compile 'com.crashlytics.android:crashlytics:1.1.13'
    compile 'org.markdownj:markdownj-core:0.4'
    compile project(':debug')
    compile 'com.android.support:palette-v7:22.2.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
}
